{"version":3,"file":"web-element.mjs","sources":["webpack://@midscene/web/./src/web-element.ts"],"sourcesContent":["import type {\n  AgentOpt,\n  DeviceAction,\n  Rect,\n  UIContext,\n  WebElementInfo,\n} from '@midscene/core';\nimport type { AbstractInterface } from '@midscene/core/device';\nimport { traverseTree } from '@midscene/shared/extractor';\nimport { getDebug } from '@midscene/shared/logger';\nimport { _keyDefinitions } from '@midscene/shared/us-keyboard-layout';\n\nimport { commonContextParser } from '@midscene/core/agent';\nimport type { NodeType } from '@midscene/shared/constants';\nimport type ChromeExtensionProxyPage from './chrome-extension/page';\nimport type { PlaywrightWebPage } from './playwright';\nimport type { PuppeteerWebPage } from './puppeteer';\nimport type { StaticPage } from './static';\nexport type { WebElementInfo };\n\nexport type WebPageAgentOpt = AgentOpt & WebPageOpt;\nexport type WebPageOpt = {\n  waitForNavigationTimeout?: number;\n  waitForNetworkIdleTimeout?: number;\n  forceSameTabNavigation?: boolean /* if limit the new tab to the current page, default true */;\n  beforeInvokeAction?: () => Promise<void>;\n  afterInvokeAction?: () => Promise<void>;\n  customActions?: DeviceAction<any>[];\n};\n\nexport type WebPage =\n  | PlaywrightWebPage\n  | PuppeteerWebPage\n  | StaticPage\n  | ChromeExtensionProxyPage;\n\nexport class WebElementInfoImpl implements WebElementInfo {\n  content: string;\n\n  rect: Rect;\n\n  center: [number, number];\n\n  id: string;\n\n  indexId: number;\n\n  attributes: {\n    nodeType: NodeType;\n    [key: string]: string;\n  };\n\n  xpaths?: string[];\n\n  isVisible: boolean;\n\n  constructor({\n    content,\n    rect,\n    id,\n    attributes,\n    indexId,\n    xpaths,\n    isVisible,\n  }: {\n    content: string;\n    rect: Rect;\n    id: string;\n    attributes: {\n      nodeType: NodeType;\n      [key: string]: string;\n    };\n    indexId: number;\n    xpaths?: string[];\n    isVisible: boolean;\n  }) {\n    this.content = content;\n    this.rect = rect;\n    this.center = [\n      Math.floor(rect.left + rect.width / 2),\n      Math.floor(rect.top + rect.height / 2),\n    ];\n    this.id = id;\n    this.attributes = attributes;\n    this.indexId = indexId;\n    this.xpaths = xpaths;\n    this.isVisible = isVisible;\n  }\n}\n\nconst debug = getDebug('web:parse-context');\nexport async function WebPageContextParser(\n  page: AbstractInterface,\n  _opt: { uploadServerUrl?: string },\n): Promise<UIContext> {\n  const basicContext = await commonContextParser(page, {\n    uploadServerUrl: _opt.uploadServerUrl,\n  });\n\n  debug('will traverse element tree');\n  const tree = (await page.getElementsNodeTree?.()) || {\n    node: null,\n    children: [],\n  };\n  const webTree = traverseTree(tree!, (elementInfo) => {\n    const { rect, id, content, attributes, indexId, isVisible } = elementInfo;\n    return new WebElementInfoImpl({\n      rect,\n      id,\n      content,\n      attributes,\n      indexId,\n      isVisible,\n    });\n  });\n  debug('traverse element tree end');\n\n  return {\n    ...basicContext,\n    tree: webTree,\n  };\n}\n\nexport const limitOpenNewTabScript = `\nif (!window.__MIDSCENE_NEW_TAB_INTERCEPTOR_INITIALIZED__) {\n  window.__MIDSCENE_NEW_TAB_INTERCEPTOR_INITIALIZED__ = true;\n\n  // Intercept the window.open method (only once)\n  window.open = function(url) {\n    console.log('Blocked window.open:', url);\n    window.location.href = url;\n    return null;\n  };\n\n  // Block all a tag clicks with target=\"_blank\" (only once)\n  document.addEventListener('click', function(e) {\n    const target = e.target.closest('a');\n    if (target && target.target === '_blank') {\n      e.preventDefault();\n      console.log('Blocked new tab:', target.href);\n      window.location.href = target.href;\n      target.removeAttribute('target');\n    }\n  }, true);\n}\n`;\n"],"names":["WebElementInfoImpl","content","rect","id","attributes","indexId","xpaths","isVisible","Math","debug","getDebug","WebPageContextParser","page","_opt","basicContext","commonContextParser","tree","webTree","traverseTree","elementInfo","limitOpenNewTabScript"],"mappings":";;;;;;;;;;;;;AAoCO,MAAMA;IAoBX,YAAY,EACVC,OAAO,EACPC,IAAI,EACJC,EAAE,EACFC,UAAU,EACVC,OAAO,EACPC,MAAM,EACNC,SAAS,EAYV,CAAE;QAtCH;QAEA;QAEA;QAEA;QAEA;QAEA;QAKA;QAEA;QAsBE,IAAI,CAAC,OAAO,GAAGN;QACf,IAAI,CAAC,IAAI,GAAGC;QACZ,IAAI,CAAC,MAAM,GAAG;YACZM,KAAK,KAAK,CAACN,KAAK,IAAI,GAAGA,KAAK,KAAK,GAAG;YACpCM,KAAK,KAAK,CAACN,KAAK,GAAG,GAAGA,KAAK,MAAM,GAAG;SACrC;QACD,IAAI,CAAC,EAAE,GAAGC;QACV,IAAI,CAAC,UAAU,GAAGC;QAClB,IAAI,CAAC,OAAO,GAAGC;QACf,IAAI,CAAC,MAAM,GAAGC;QACd,IAAI,CAAC,SAAS,GAAGC;IACnB;AACF;AAEA,MAAME,QAAQC,SAAS;AAChB,eAAeC,qBACpBC,IAAuB,EACvBC,IAAkC;QAOdD;IALpB,MAAME,eAAe,MAAMC,oBAAoBH,MAAM;QACnD,iBAAiBC,KAAK,eAAe;IACvC;IAEAJ,MAAM;IACN,MAAMO,OAAQ,eAAMJ,CAAAA,4BAAAA,KAAK,mBAAmB,AAAD,IAAvBA,KAAAA,IAAAA,0BAAAA,IAAAA,CAAAA,KAAI,KAA6B;QACnD,MAAM;QACN,UAAU,EAAE;IACd;IACA,MAAMK,UAAUC,aAAaF,MAAO,CAACG;QACnC,MAAM,EAAEjB,IAAI,EAAEC,EAAE,EAAEF,OAAO,EAAEG,UAAU,EAAEC,OAAO,EAAEE,SAAS,EAAE,GAAGY;QAC9D,OAAO,IAAInB,mBAAmB;YAC5BE;YACAC;YACAF;YACAG;YACAC;YACAE;QACF;IACF;IACAE,MAAM;IAEN,OAAO;QACL,GAAGK,YAAY;QACf,MAAMG;IACR;AACF;AAEO,MAAMG,wBAAwB,CAAC;;;;;;;;;;;;;;;;;;;;;;AAsBtC,CAAC"}