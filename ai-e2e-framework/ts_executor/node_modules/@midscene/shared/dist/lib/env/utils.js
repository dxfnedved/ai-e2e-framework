"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    globalConfigManager: ()=>globalConfigManager,
    globalModelConfigManager: ()=>globalModelConfigManager,
    getPreferredLanguage: ()=>getPreferredLanguage,
    overrideAIConfig: ()=>overrideAIConfig
});
const external_global_config_manager_js_namespaceObject = require("./global-config-manager.js");
const external_model_config_manager_js_namespaceObject = require("./model-config-manager.js");
const external_types_js_namespaceObject = require("./types.js");
const globalModelConfigManager = new external_model_config_manager_js_namespaceObject.ModelConfigManager();
const globalConfigManager = new external_global_config_manager_js_namespaceObject.GlobalConfigManager();
globalConfigManager.registerModelConfigManager(globalModelConfigManager);
globalModelConfigManager.registerGlobalConfigManager(globalConfigManager);
const getPreferredLanguage = ()=>{
    const prefer = globalConfigManager.getEnvConfigValue(external_types_js_namespaceObject.MIDSCENE_PREFERRED_LANGUAGE);
    if (prefer) return prefer;
    const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;
    const isChina = 'Asia/Shanghai' === timeZone;
    return isChina ? 'Chinese' : 'English';
};
const overrideAIConfig = (newConfig, extendMode = false)=>{
    globalConfigManager.overrideAIConfig(newConfig, extendMode);
};
exports.getPreferredLanguage = __webpack_exports__.getPreferredLanguage;
exports.globalConfigManager = __webpack_exports__.globalConfigManager;
exports.globalModelConfigManager = __webpack_exports__.globalModelConfigManager;
exports.overrideAIConfig = __webpack_exports__.overrideAIConfig;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "getPreferredLanguage",
    "globalConfigManager",
    "globalModelConfigManager",
    "overrideAIConfig"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
