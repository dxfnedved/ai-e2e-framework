{"version":3,"file":"launcher.js","sources":["webpack://@midscene/playground/webpack/runtime/compat_get_default_export","webpack://@midscene/playground/webpack/runtime/define_property_getters","webpack://@midscene/playground/webpack/runtime/has_own_property","webpack://@midscene/playground/webpack/runtime/make_namespace_object","webpack://@midscene/playground/./src/launcher.ts"],"sourcesContent":["// getDefaultExport function for compatibility with non-ESM modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};\n","__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { spawn } from 'node:child_process';\nimport type { Agent, Agent as PageAgent } from '@midscene/core/agent';\nimport { PLAYGROUND_SERVER_PORT } from '@midscene/shared/constants';\nimport cors from 'cors';\nimport PlaygroundServer from './server';\n\nexport interface LaunchPlaygroundOptions {\n  /**\n   * Port to start the playground server on\n   * @default 5800\n   */\n  port?: number;\n\n  /**\n   * Whether to automatically open the playground in browser\n   * @default true\n   */\n  openBrowser?: boolean;\n\n  /**\n   * Custom browser command to open playground\n   * @default 'open' on macOS, 'start' on Windows, 'xdg-open' on Linux\n   */\n  browserCommand?: string;\n\n  /**\n   * Whether to show server logs\n   * @default true\n   */\n  verbose?: boolean;\n\n  /**\n   * Fixed ID for the playground server instance\n   * If provided, the same ID will be used across restarts,\n   * allowing chat history to persist\n   * @default undefined (generates random UUID)\n   */\n  id?: string;\n\n  /**\n   * Whether to enable CORS (Cross-Origin Resource Sharing)\n   * @default false\n   */\n  enableCors?: boolean;\n\n  /**\n   * CORS configuration options\n   * @default { origin: '*', credentials: true } when enableCors is true\n   */\n  corsOptions?: {\n    origin?: string | boolean | string[];\n    credentials?: boolean;\n    methods?: string[];\n    allowedHeaders?: string[];\n  };\n}\n\nexport interface LaunchPlaygroundResult {\n  /**\n   * The playground server instance\n   */\n  server: PlaygroundServer;\n\n  /**\n   * The server port\n   */\n  port: number;\n\n  /**\n   * The server host\n   */\n  host: string;\n\n  /**\n   * Function to gracefully shutdown the playground\n   */\n  close: () => Promise<void>;\n}\n\n/**\n * Create a playground launcher for a specific agent\n *\n * @example\n * ```typescript\n * import { playgroundForAgent } from '@midscene/playground';\n * import { SampleDevice, Agent } from '@midscene/core';\n *\n * const device = new SampleDevice();\n * const agent = new Agent(device);\n *\n * // Launch playground for the agent\n * const server = await playgroundForAgent(agent).launch();\n *\n * // Launch with CORS enabled\n * const serverWithCors = await playgroundForAgent(agent).launch({\n *   enableCors: true,\n *   corsOptions: {\n *     origin: ['http://localhost:3000', 'http://localhost:8080'],\n *     credentials: true\n *   }\n * });\n *\n * // Later, when you want to shutdown:\n * server.close();\n * ```\n */\nexport function playgroundForAgent(agent: Agent) {\n  return {\n    /**\n     * Launch the playground server with optional configuration\n     */\n    async launch(\n      options: LaunchPlaygroundOptions = {},\n    ): Promise<LaunchPlaygroundResult> {\n      const {\n        port = PLAYGROUND_SERVER_PORT,\n        openBrowser = true,\n        browserCommand,\n        verbose = true,\n        id,\n        enableCors = false,\n        corsOptions = { origin: '*', credentials: true },\n      } = options;\n\n      // Extract agent components - Agent has interface property\n      const webPage = agent.interface;\n      if (!webPage) {\n        throw new Error('Agent must have an interface property');\n      }\n\n      if (verbose) {\n        console.log('üöÄ Starting Midscene Playground...');\n        console.log(`üì± Agent: ${agent.constructor.name}`);\n        console.log(`üñ•Ô∏è Page: ${webPage.constructor.name}`);\n        console.log(`üåê Port: ${port}`);\n        if (enableCors) {\n          console.log('üîì CORS enabled');\n        }\n      }\n\n      // Create and launch the server with agent instances\n      const server = new PlaygroundServer(\n        webPage,\n        agent as unknown as PageAgent,\n        undefined, // staticPath - use default\n        id, // Optional override ID (usually not needed now)\n      );\n\n      // Register CORS middleware if enabled\n      if (enableCors) {\n        server.app.use(cors(corsOptions));\n      }\n\n      const launchedServer = (await server.launch(port)) as PlaygroundServer;\n\n      if (verbose) {\n        console.log(`‚úÖ Playground server started on port ${port}`);\n      }\n\n      const url = `http://127.0.0.1:${port}`;\n\n      // Open browser if requested\n      if (openBrowser) {\n        await openInBrowser(url, browserCommand, verbose);\n      }\n\n      return {\n        server: launchedServer,\n        port,\n        host: '127.0.0.1',\n        close: async () => {\n          if (verbose) {\n            console.log('üõë Shutting down Midscene Playground...');\n          }\n\n          try {\n            await launchedServer.close();\n            if (verbose) {\n              console.log('‚úÖ Playground shutdown complete');\n            }\n          } catch (error) {\n            if (verbose) {\n              console.error('‚ùå Error during playground shutdown:', error);\n            }\n            throw error;\n          }\n        },\n      };\n    },\n  };\n}\n\n/**\n * Open URL in browser using platform-appropriate command\n */\nasync function openInBrowser(\n  url: string,\n  customCommand?: string,\n  verbose = true,\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    let command: string;\n    let args: string[];\n\n    if (customCommand) {\n      command = customCommand;\n      args = [url];\n    } else {\n      // Detect platform and use appropriate command\n      switch (process.platform) {\n        case 'darwin':\n          command = 'open';\n          args = [url];\n          break;\n        case 'win32':\n          command = 'start';\n          args = ['', url]; // Empty string for title\n          break;\n        default:\n          command = 'xdg-open';\n          args = [url];\n          break;\n      }\n    }\n\n    if (verbose) {\n      console.log(`üåê Opening browser: ${command} ${args.join(' ')}`);\n    }\n\n    const child = spawn(command, args, {\n      detached: true,\n      stdio: 'ignore',\n    });\n\n    child.on('error', (error) => {\n      if (verbose) {\n        console.warn('‚ö†Ô∏è  Failed to open browser automatically:', error.message);\n        console.log(`üåê Please open manually: ${url}`);\n      }\n      // Don't reject, just continue - browser opening is optional\n      resolve();\n    });\n\n    child.on('close', () => {\n      resolve();\n    });\n\n    // Don't wait for the browser process\n    child.unref();\n  });\n}\n"],"names":["__webpack_require__","module","getter","definition","key","Object","obj","prop","Symbol","playgroundForAgent","agent","options","port","PLAYGROUND_SERVER_PORT","openBrowser","browserCommand","verbose","id","enableCors","corsOptions","webPage","Error","console","server","PlaygroundServer","undefined","cors","launchedServer","url","openInBrowser","error","customCommand","Promise","resolve","reject","command","args","process","child","spawn"],"mappings":"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"}